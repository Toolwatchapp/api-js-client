var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import { Observable } from "rxjs/Observable";
import { Injectable } from "@angular/core";
export var TranslateLoader = (function () {
    function TranslateLoader() {
    }
    return TranslateLoader;
}());
/**
 * This loader is just a placeholder that does nothing, in case you don't need a loader at all
 */
export var TranslateFakeLoader = (function (_super) {
    __extends(TranslateFakeLoader, _super);
    function TranslateFakeLoader() {
        _super.apply(this, arguments);
    }
    TranslateFakeLoader.prototype.getTranslation = function (lang) {
        return Observable.of({});
    };
    TranslateFakeLoader.decorators = [
        { type: Injectable },
    ];
    /** @nocollapse */
    TranslateFakeLoader.ctorParameters = function () { return []; };
    return TranslateFakeLoader;
}(TranslateLoader));
