{"version":3,"file":"form.helper.js","sourceRoot":"","sources":["form.helper.ts"],"names":[],"mappings":";AAOA;IAAA;IAmBA,CAAC;IAjBG;;;;;;;OAOG;IACI,gBAAK,GAAZ,UAAa,OAAoB,EAAE,cAAkB;QAEjD,IAAI,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;QACzC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACd,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAE,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAA;QACrE,CAAC;QAED,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IACL,iBAAC;AAAD,CAAC,AAnBD,IAmBC;AAnBY,kBAAU,aAmBtB,CAAA","sourcesContent":["import {   \n  REACTIVE_FORM_DIRECTIVES,  \n  FormBuilder,  \n  FormGroup,\n  FormControl\n} from '@angular/forms';\n\nexport class FormHelper{\n    \n    /**\n     * RC4 Regression. Input takes the form group as \n     * default value...\n     * \n     * @param  {FormBuilder} builder       \n     * @param  {any}         controlsConfig\n     * @return {FormGroup}                 \n     */\n    static group(builder: FormBuilder, controlsConfig:any): FormGroup{\n\n        var form = builder.group(controlsConfig);\n        for (var i in form.controls) {\n          (<FormControl>form.controls[i]).updateValue('', { onlySelf: true })\n        }\n\n        return form;\n    }\n}"]}