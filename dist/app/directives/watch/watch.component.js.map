{"version":3,"file":"watch.component.js","sourceRoot":"","sources":["watch.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input, EventEmitter, Output, OnInit } from '@angular/core';\nimport {TRANSLATE_PROVIDERS, TranslateService, TranslatePipe, TranslateLoader, TranslateStaticLoader} from 'ng2-translate/ng2-translate';\nimport { Watch } from './../../models/watch.model';\nimport { User } from './../../models/user.model';\nimport {TwAPIService} from './../../services/twapi.service';\nimport {Http, HTTP_PROVIDERS, Headers}  from '@angular/http';\nimport { GAService } from './../../services/ga.service';\nimport { FormHelper } from './../../helpers/form.helper';\nimport {Control, ControlGroup, Validators}  from '@angular/common';\n\nimport {   \n  REACTIVE_FORM_DIRECTIVES,  \n  FormBuilder,  \n  FormGroup,\n  FormControl\n} from '@angular/forms';\n\n@Component({\n  selector: 'watch-form',\n  templateUrl: 'base/dist/app/directives/watch/watch.component.html',\n  styleUrls: ['app/directives/watch/watch.component.css'],\n  pipes: [TranslatePipe],\n  providers: [TwAPIService, HTTP_PROVIDERS],\n  directives: [REACTIVE_FORM_DIRECTIVES]\n})\n/**\n * From to add, delete and update watches\n */\nexport class WatchComponent implements OnInit {\n\n  watchModel: Watch = new Watch(null, null);\n  user: User;\n  @Output() watchSaved = new EventEmitter();\n\n  watchForm        : FormGroup;\n  brands           : { name: string, icon: string, models: string }[] = [];\n  models           : string[] = [];\n  filteredBrandList: { name: string, icon: string, models: string }[] = [];\n  filteredModelList: string[] = [];\n  error            : boolean = false;\n  submitAttempt    : boolean = false;\n\n  /**\n   * Constructor with DI\n   * @param {TranslateService} private translate [description]\n   * @param {TwAPIService}     private twapi     [description]\n   * @param {FormBuilder}      private builder   [description]\n   */\n  constructor(\n    protected translate: TranslateService,\n    private twapi      : TwAPIService, \n    private builder    : FormBuilder\n  ) {\n\n    translate.setDefaultLang('en');\n    translate.use('en');\n\n    console.log(this.watchModel);\n    console.log(this.user);\n\n    this.watchForm = FormHelper.group(this.builder, {\n      id     : [],\n      brand  : [<any>Validators.required],\n      name   : [],\n      caliber: [],\n      year   : [<any>Validators.minLength(4),  <any>Validators.maxLength(4)],\n      serial : []\n    });\n  }\n\n  fillFormValue(){\n\n    FormHelper.updateValue(this.watchForm, \"id\", this.watchModel.id);\n    FormHelper.updateValue(this.watchForm, \"brand\", this.watchModel.brand);\n    FormHelper.updateValue(this.watchForm, \"name\", this.watchModel.name);\n    FormHelper.updateValue(this.watchForm, \"caliber\", this.watchModel.caliber);\n    FormHelper.updateValue(this.watchForm, \"year\", this.watchModel.yearOfBuy);\n    FormHelper.updateValue(this.watchForm, \"serial\", this.watchModel.serial);\n  }\n\n  /**\n   * Pull the brands\n   */\n  ngAfterViewInit() {\n    //Get the known brands\n    this.twapi.getBrands().then(\n      res => {\n        this.brands = res;\n      }\n    );\n  }\n\n\n  /**\n   * [selectBrand description]\n   * @param {string} brand [description]\n   */\n  selectBrand(brand: string){\n    this.twapi.getModels(brand.toLowerCase()).then(\n      res   => this.models = res,\n      error => this.models = []\n    );\n    this.filteredBrandList = [];\n    FormHelper.updateValue(this.watchForm, 'brand', brand);\n  }\n\n  /**\n   * Select a model\n   * @param {string} model [description]\n   */\n  selectModel(model: string) {\n    this.filteredModelList = [];\n    FormHelper.updateValue(this.watchForm, 'name', model);\n  }\n\n  /**\n   * Filter brands according the brand\n   * @param {string} brand [description]\n   */\n  filterBrand(brand: string) {\n    this.filteredBrandList = this.brands.filter(\n      function(element: { name: string, icon: string, models: string }) {\n        return element.name.toLowerCase().indexOf(brand.toLowerCase()) > -1;\n    });\n  }\n\n  /**\n   * Filters models according to model\n   * @param {string} model [description]\n   */\n  filterModel(model:string){\n    this.filteredModelList = this.models.filter(function(element:string) {\n      return element.toLowerCase().indexOf(model.toLowerCase()) > -1;\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   * Submit a watch\n   */\n  onSubmit(){\n    this.submitAttempt = true;\n\n    if (this.watchForm.valid) {\n\n      \n\n      this.twapi.upsertWatch(this.watchFromForm()).then(\n        res => {\n          GAService.event('CTA', 'WATCH_UPSERT', 'SUCCESS');\n          this.user.upsertWatch(res);\n          this.watchSaved.emit(this.user)\n        },\n        error => {\n          GAService.event('CTA', 'WATCH_UPSERT', 'FAIL');\n          this.error = true\n        }\n      );\n    }\n  }\n\n  onDelete(){\n    this.twapi.deleteWatch(this.user, this.watchFromForm()).then(\n      res => {\n        GAService.event('CTA', 'WATCH_DELETE', 'SUCCESS');\n        this.watchSaved.emit(res)\n      },\n      error => {\n        GAService.event('CTA', 'WATCH_DELETE', 'FAIL');\n        this.error = true\n      }\n    );\n  }\n\n  private watchFromForm():Watch{\n    return new Watch(\n        (this.watchForm.value.id == \"\") ? null : this.watchForm.value.id, \n        this.watchForm.value.brand,\n        this.watchModel.historySize,\n        this.watchModel.measures,\n        this.watchForm.value.name,\n        this.watchForm.value.year,\n        this.watchForm.value.serial,\n        this.watchForm.value.caliber\n      );\n  }\n}\n"]}