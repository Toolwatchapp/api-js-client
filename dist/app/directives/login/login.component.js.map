{"version":3,"file":"login.component.js","sourceRoot":"","sources":["login.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Output, OnInit, EventEmitter } from '@angular/core';\nimport {TRANSLATE_PROVIDERS, TranslateService, TranslatePipe, TranslateLoader, TranslateStaticLoader} from 'ng2-translate/ng2-translate';\nimport {Control, ControlGroup, Validators}  from '@angular/common';\nimport {TwAPIService} from './../../services/twapi.service'\nimport {Http, HTTP_PROVIDERS, Headers}  from '@angular/http';\nimport { GlobalValidator } from './../global-validator';\nimport { GAService } from './../../services/ga.service';\nimport { FormHelper } from './../../helpers/form.helper';\n\nimport {   \n  REACTIVE_FORM_DIRECTIVES,  \n  FormBuilder,  \n  FormGroup,\n  FormControl\n} from '@angular/forms';\n\nimport { Wove } from 'aspect.js/dist/lib/aspect';\nimport { LoggerAspect } from './../../aspects/logger.aspect';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: 'app/directives/login/login.component.html',\n  styleUrls: ['app/directives/login/login.component.css'],\n  pipes: [TranslatePipe],\n  directives: [REACTIVE_FORM_DIRECTIVES]\n})\n/**\n * Login component. Provides a login form with controlled and\n * emits a User ($event userLogged) on successful login.\n */\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  submitAttempt:boolean = false;\n  credientials = false;\n  error = false;\n  @Output() userLogged = new EventEmitter();\n  @Output() loginAttempt = new EventEmitter();\n  @Output() loginError = new EventEmitter();\n\n  /**\n   * Constructor w/ service injection\n   * @param {TranslateService} private translate [description]\n   * @param {TwAPIService}     private twapi     [description]\n   * @param {FormBuilder}      private builder   [description]\n   */\n  constructor(private translate: TranslateService, \n    protected twapi: TwAPIService, private builder: FormBuilder) { \n\n    //Lang definition\n\t  translate.setDefaultLang('en');\n\t  translate.use('en');\n\n    this.loginForm = FormHelper.group(this.builder, {\n      email: [<any>Validators.required, <any>GlobalValidator.mailFormat],\n      password: [<any>Validators.required, <any>Validators.minLength(5)]\n    });\n\n  }\n\n  /**\n   * Form submit\n   * @param {string}} user [description]\n   */\n  onSubmit(user:{email:string, password:string}){\n\n    this.submitAttempt = true;\n    this.error = false;\n    this.credientials = false;\n    \n    //Form constraints are ok\n    if(this.loginForm.valid){\n\n      this.loginAttempt.emit(true);\n\n      this.twapi.login(user.email, user.password).then(\n        res => { \n          this.userLogged.emit(res);\n          GAService.event('CTA', 'LOGIN', 'SUCCESS');\n        }, \n        err => {\n          GAService.event('CTA', 'LOGIN', 'FAIL');\n          this.loginAttempt.emit(false);\n\n          switch (err.status) {\n            case 401:\n              this.credientials = true;\n              break;\n            default:\n              this.error = true;\n              break;\n          }\n        }\n      );\n    }\n  }\n\n  ngOnInit() {\n\n  }\n\n}\n"]}