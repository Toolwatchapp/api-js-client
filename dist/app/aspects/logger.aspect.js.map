{"version":3,"file":"logger.aspect.js","sourceRoot":"","sources":["logger.aspect.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,uBASO,2BAA2B,CAAC,CAAA;AAEnC;IAAA;IA2BA,CAAC;IAxBC,mCAAY,GAAZ,UAAa,IAAc;QACzB,oGAAoG;IACtG,CAAC;IAGD,6BAAM,GAAN,UAAO,IAAc;QACnB,4GAA4G;IAC9G,CAAC;IAGD,4BAAK,GAAL,UAAM,IAAc;QAClB,oGAAoG;IACtG,CAAC;IAGD,wCAAiB,GAAjB,UAAkB,IAAc;QAC9B,oGAAoG;IACtG,CAAC;IAlBD;QAAC,2BAAkB,CAAC,EAAE,gBAAgB,EAAE,IAAI,EAAE,iBAAiB,EAAE,IAAI,EAAC,CAAC;;;;oDAAA;IAKvE;QAAC,qBAAY,CAAC,EAAE,gBAAgB,EAAE,IAAI,EAAE,iBAAiB,EAAE,IAAI,EAAC,CAAC;;;;8CAAA;IAKjE;QAAC,oBAAW,CAAC,EAAE,gBAAgB,EAAE,IAAI,EAAE,iBAAiB,EAAE,IAAI,EAAC,CAAC;;;;6CAAA;IAKhE;QAAC,0BAAiB,CAAC,EAAE,gBAAgB,EAAE,IAAI,EAAE,iBAAiB,EAAE,IAAI,EAAC,CAAC;;;;yDAAA;IAUxE,mBAAC;AAAD,CAAC,AA3BD,IA2BC;AA3BY,oBAAY,eA2BxB,CAAA","sourcesContent":["import {Wove, \n  Metadata, \n  MethodMetadata, \n  beforeMethod, \n  afterMethod, \n  beforeStaticMethod,\n  afterStaticMethod,\n  onThrowOfMethod,\n  onThrowOfStaticMethod\n} from 'aspect.js/dist/lib/aspect';\n\nexport class LoggerAspect {\n\n  @beforeStaticMethod({ classNamePattern: /.*/, methodNamePattern: /.*/})\n  beforeStatic(meta: Metadata) {\n    //console.log(`TW: AFTER: ${meta.className}.${meta.method.name} with result ${meta.method.result}`);\n  }\n\n  @beforeMethod({ classNamePattern: /.*/, methodNamePattern: /.*/})\n  before(meta: Metadata) {\n    //console.log(`TW: BEFORE: ${meta.className}.${meta.method.name} with args ${meta.method.args.join(', ')}`);\n  }\n\n  @afterMethod({ classNamePattern: /.*/, methodNamePattern: /.*/})\n  after(meta: Metadata) {\n    //console.log(`TW: AFTER: ${meta.className}.${meta.method.name} with result ${meta.method.result}`);\n  }\n\n  @afterStaticMethod({ classNamePattern: /.*/, methodNamePattern: /.*/})\n  afterStaticMethod(meta: Metadata) {\n    //console.log(`TW: AFTER: ${meta.className}.${meta.method.name} with result ${meta.method.result}`);\n  }\n\n  // @onThrowOfMethod({ classNamePattern: /.*/, methodNamePattern: /.*/})\n  // @onThrowOfStaticMethod({ classNamePattern: /.*/, methodNamePattern: /.*/})\n  // afterThrow(meta: Metadata) {\n  //   console.log(`TW: THROW: ${meta.className}.${meta.method.name} throwed ${meta.method.exception}`);\n  // }\n}"]}