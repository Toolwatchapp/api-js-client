{"version":3,"file":"main.js","sourceRoot":"","sources":["main.ts"],"names":[],"mappings":"AAAA,4CAA4C;;;;;;;;;;;AAE5C,qBAA8B,eAAe,CAAC,CAAA;AAC9C,iCAA8B,2BAA2B,CAAC,CAAA;AAC1D,sBAAoE,gBAAgB,CAAC,CAAA;AACrF,qBAA+B,eAAe,CAAC,CAAA;AAC/C,yCAAuC,mCAAmC,CAAC,CAAA;AAG3E,qBAA+B,eAAe,CAAC,CAAA;AAC/C,iBAA4B,QAAQ,CAAC,CAAA;AAErC,gCAA+B,wCAAwC,CAAC,CAAA;AAGxE,8BAA6B,8BAA8B,CAAC,CAAA;AAC5D,8BAA2G,6BAA6B,CAAC,CAAA;AACzI,qBAAmC,eAAe,CAAC,CAAA;AACnD,qBAA6C,eAAe,CAAC,CAAA;AAC7D,2BAAwB,2BAA2B,CAAC,CAAA;AAEpD,EAAE,CAAC,CAAC,cAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,qBAAc,EAAE,CAAC;AACnB,CAAC;AAED,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AA0BlB;IAAA;IAAyB,CAAC;IAvB1B;QAAC,eAAQ,CAAC;YACR,OAAO,EAAE;gBACR,gCAAa;gBACZ,mBAAW;gBACX,iBAAU;aACX;YACD,YAAY,EAAE,EAEb;YACD,SAAS,EAAE;gBACV,sBAAS;gBACT,4BAAY;gBACZ,cAAO,CAAC,+BAAe,EAAE;oBACvB,UAAU,EAAE,UAAC,IAAU,IAAK,OAAA,IAAI,qCAAqB,CAAC,IAAI,EAAE,iBAAiB,EAAE,OAAO,CAAC,EAA3D,CAA2D;oBACvF,IAAI,EAAE,CAAC,WAAI,CAAC;iBACf,CAAC;gBACF,6GAA6G;gBAC7G,gCAAgB;gBAChB,8BAAsB,EAAE;gBACxB,oBAAY,EAAE;aACZ;YACD,SAAS,EAAE,CAAE,gCAAc,CAAE;SAC9B,CAAC;;iBAAA;IACuB,gBAAC;AAAD,CAAC,AAA1B,IAA0B;AAAb,iBAAS,YAAI,CAAA;AAE1B,iDAAsB,EAAE,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC","sourcesContent":["///<reference path=\"../typings/index.d.ts\"/>\n\nimport { NgModule }      from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, disableDeprecatedForms, provideForms }   from '@angular/forms';\nimport { HttpModule }     from '@angular/http';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { bootstrap } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './app/';\nimport { ApiClientAppComponent } from './app/directives/api-client.component';\nimport { LoginComponent } from './app/directives/login/login.component';\nimport { SignupComponent } from './app/directives/signup/signup.component';\nimport { WatchComponent } from './app/directives/watch/watch.component';\nimport { TwAPIService } from './app/services/twapi.service';\nimport {TRANSLATE_PROVIDERS, TranslateService, TranslatePipe, TranslateLoader, TranslateStaticLoader} from 'ng2-translate/ng2-translate';\nimport {HTTP_PROVIDERS, Http} from '@angular/http';\nimport {Component, Injectable, provide} from '@angular/core';\nimport {GAService} from './app/services/ga.service';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nconsole.log(this);\n\n\n@NgModule({\n  imports: [\n  \tBrowserModule,\n    FormsModule,\n    HttpModule\n  ],\n  declarations: [\n    \n  ],\n  providers: [\n  \tGAService,\n  \tTwAPIService,\n  \tprovide(TranslateLoader, {\n\t    useFactory: (http: Http) => new TranslateStaticLoader(http, 'app/assets/i18n', '.json'),\n\t    deps: [Http]\n\t}),\n\t// use TranslateService here, and not TRANSLATE_PROVIDERS (which will define a default TranslateStaticLoader)\n\tTranslateService,\n\tdisableDeprecatedForms(), \n\tprovideForms() \n  ],\n  bootstrap: [ LoginComponent ]\n})\nexport class AppModule { }\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n"]}